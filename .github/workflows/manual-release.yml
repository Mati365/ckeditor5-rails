name: Manual Release

on:
  workflow_dispatch:
    inputs:
      version:
        description: Version number (X.Y.Z)
        required: true
        type: string

jobs:
  prepare-release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.3'
          bundler-cache: true

      - name: Set up Node.js
        uses: actions/setup-node@v4

      - name: Configure Git
        run: |
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git config user.name "github-actions[bot]"

      - name: Show current version file
        run: cat lib/ckeditor5/rails/version.rb

      - name: Update version
        run: |
          sed -i "/^[[:space:]]*VERSION = / {/DEFAULT_CKEDITOR_VERSION/! s/'[0-9.]*'/'${{ github.event.inputs.version }}'/}" lib/ckeditor5/rails/version.rb

      - name: Update changelog
        run: |
          chmod +x bin/generate_changelog.rb
          ruby bin/generate_changelog.rb ${{ github.event.inputs.version }}

      - name: Bundle install
        run: |
          bundle config set frozen false
          bundle install

      - name: Install npm dependencies
        run: npm ci

      - name: Build npm_package
        run: npm run npm_package:build

      - name: Show changes
        run: |
          echo "Version file changes:"
          git diff lib/ckeditor5/rails/version.rb
          echo "Changelog changes:"
          git diff CHANGELOG.md

      - name: Commit changes
        run: |
          git add lib/ckeditor5/rails/version.rb Gemfile.lock CHANGELOG.md
          git commit -m "Bump version to ${{ github.event.inputs.version }} and update dependencies"
          git push origin HEAD:main

      - name: Trigger Release Process
        uses: peter-evans/repository-dispatch@v2
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          event-type: trigger-release
          client-payload: '{"version": "${{ github.event.inputs.version }}"}'
